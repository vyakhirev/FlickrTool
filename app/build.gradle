apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: "io.gitlab.arturbosch.detekt"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "ru.vyakhirev.flickrtool"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.incremental": "true"]
            }
        }
        defaultConfig {
            javaCompileOptions {
                annotationProcessorOptions {
                    arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
                }
            }
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnit4Runner"
        vectorDrawables.useSupportLibrary = true
//        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        checkDependencies true
        abortOnError false
        xmlReport false

    }

    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        def flickrApiKey = properties.getProperty("FlickrApiKey", "")
        it.buildConfigField 'String', "FLICKR_API_KEY", flickrApiKey
        it.resValue 'string', "api_key", flickrApiKey
    }
}


def retrofit_version = '2.9.0'
def okHttp_version = '4.8.1'
def rxJavaVersion = '2.1.1'
def room_version = '2.2.5'
def dagger_version = '2.28'
def paging_version = '2.1.2'
def photoView_version = '2.3.0'
def multidex_version = '2.0.1'
def glide_version = '3.11.0'
def glideOkhttpIntegrationVersion = '1.5.0'
dependencies {
    lintChecks project(":lint_Checks")

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //Multidex
    implementation "androidx.multidex:multidex:$multidex_version"
//    implementation 'com.android.support:multidex:1.0.3'

    //Navigation AAC
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'

    //PhotoView aims to help produce an easily usable implementation of a zooming Android ImageView.
    implementation "com.github.chrisbanes:PhotoView:$photoView_version"

    //Paging library
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
//     alternatively - without Android dependencies for testing
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"
    // RxJava support
    implementation "androidx.paging:paging-rxjava2-ktx:$paging_version"


    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    //OkHttpLoggingInterceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp_version"

    //RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxJavaVersion"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation 'android.arch.persistence.room:rxjava2:2.1.1'

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glideOkhttpIntegrationVersion"
//    kapt "com.github.bumptech.glide:compiler:$glide_version"

//    Dagger2
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //My modules
    implementation project(':core')
    implementation project(':listPhoto_module')
    implementation project(':favorPhoto_module')
}